---

- name: 'make sure rpm_dependencies are installed'
  yum: name={{item}} state=installed
  when: ansible_os_family == "RedHat"
  register: installed
  retries: 3
  with_items: rpm_dependencies
  
# download artifactory http://bit.ly/Hqv9aj
- name: 'make sure directory exists for artifactory'
  file: dest=/opt/artifactory state=directory mode=0755

  
- name: 'verify presence of artifactory'
  stat: path="/opt/artifactory/artifactory-{{artifactory_version}}/webapps/artifactory.war"
  register: jarfile

- name: 'verify presence of artifactory_file'
  stat: path=/tmp/{{artifactory_file}}
  register: download

- name: 'download artifactory'
  get_url: url={{artifactory_url}} dest=/tmp/{{artifactory_file}}
  retries: 3
  when: not download.stat.exists

- name: 'unzip artifactory'
  command: unzip -o  /tmp/{{artifactory_file}} -d /opt/artifactory
  when: not jarfile.stat.exists

#- name: 'verify presence of artifactory download'
#  stat: path=/tmp/{{artifactory_file}}
#  register: artifactory_download

#- name: 'cleanup artifactory download'
#  file: dest=/tmp/{{artifactory_file}} state=absent
#  when: artifactory_download.stat.exists

- name: 'create artifactory database'
  postgresql_db: name=artifactory template='template0' encoding='UTF-8'
  when: features.postgresql

- name: 'download jdbc connector for postgres'
  get_url: url={{postgres_jdbc_url}} dest={{artifactory_home}}/tomcat/lib
  when: features.postgresql

- name: 'create artifactory database user'
  postgresql_user: db=artifactory name='{{artifactory_username}}' password='{{artifactory_password}}'
  when: features.postgresql

- name: 'create config dir for artifactory'
  file: dest=/etc/opt/jfrog/artifactory state=directory owner=root mode=0755

- name: 'create configuration file'
  template: src=etc-opt-jfrog-artifactory-default.j2 dest=/etc/opt/jfrog/artifactory/default
                owner=root group=root mode=0644

- name: 'add postgresql driver'
  template: src=storage_postgresql.j2 dest={{artifactory_home}}/etc/storage.properties owner=root group=root mode=0644
  when: features.postgresql

- name: 'install artifactory as a service'
  command: "{{artifactory_home}}/bin/installService.sh artifact creates=/etc/init.d/artifactory"


  notify:
    - 'restart artifactory'
