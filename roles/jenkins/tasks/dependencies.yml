---
- name: 'make sure rpm_dependencies are installed'
  yum: name={{item}} state=installed
  when: ansible_os_family == "RedHat"
  register: installed
  retries: 3
  with_items: rpm_dependencies

- name: 'install software group "Development tools"'
  yum: name="@Development tools" state=present
  retries: 3
  when: ansible_os_family == "RedHat"

- name: 'make sure jenkins_data directory exists'
  file: path={{jenkins_data}} owner=jenkins group=jenkins state=directory

- name: 'make sure jenkins_tools directory exists'
  file: path={{jenkins_tools}} owner=jenkins group=jenkins mode=0750 state=directory

- name: 'verify presence of maven'
  stat: path={{maven_home}}/bin/mvn
  register: mvn_installed
  when: features.maven

- name: 'download maven'
  get_url: url={{maven_url}} dest=/tmp
  retries: 3
  when: features.maven and not mvn_installed.stat.exists

- name: 'untar maven'
  command: tar xfz /tmp/{{maven_tarfile}} -C {{jenkins_tools}} 
  when: features.maven and not mvn_installed.stat.exists

- name: 'make sure jenkins ~/.m2 directory exists'
  file: path={{jenkins_home}}/.m2 owner=jenkins group=jenkins mode=0750 state=directory
  when: features.maven 

- name: 'make sure maven directory is absent'
  file: dest={{maven_home}} state=absent
  when: not features.maven

- name: 'cleanup maven download'
  file: dest=/tmp/{{maven_tarfile}} state=absent
 
- name: 'verify presence of Gradle'
  stat: path={{gradle_home}}/bin/gradle
  register: gradle_installed
  when: features.gradle

- name: 'download Gradle'
  get_url: url={{gradle_url}} dest=/tmp
  retries: 3
  when: features.gradle and not gradle_installed.stat.exists
  
- name: 'unzip Gradle'
  command: unzip -o  /tmp/{{gradle_zipfile}} -d {{jenkins_tools}} creates={{gradle_home}}
  when: features.gradle

- name: 'verify presence of Gradle download'
  stat: path=/tmp/{{gitblit_tarfile}}
  register: gradle_download
  when: features.gradle

- name: 'cleanup Gradle download'
  file: dest=/tmp/{{gradle_zipfile}} state=absent
  when: gradle_download.stat.exists
  
- name: 'make sure Gradle directory is absent'
  file: dest={{gradle_home}} state=absent
  when: not features.gradle
  
- name: 'download Ant'
  get_url: url={{ant_url}} dest=/tmp
  retries: 3
  when: features.ant
  
- name: 'untar Ant'
  command: tar xfz /tmp/{{ant_tarfile}} -C {{jenkins_tools}} creates={{ant_home}}
  when: features.ant

- name: 'verify presence of Ant download'
  stat: path=/tmp/{{ant_tarfile}}
  register: ant_download
  when: features.ant

- name: 'cleanup Ant download'
  file: dest=/tmp/{{ant_tarfile}} state=absent
  when: ant_download.stat.exists

- name: 'make sure Ant directory is absent'
  file: dest={{ant_home}} state=absent
  when: not features.ant
